//==============================================================================
// 文件：LaserSettings.h
// 作者：Yunsio
// 日期：2025-10-06
// 描述：激光系统配置参数定义，包含网络、渲染、扫描仪模拟等所有配置项
//==============================================================================

#pragma once

#include <cstdint>

namespace BeyondLink {
namespace Core {

//==========================================================================
// 结构体：LaserSettings
// 描述：激光系统的全局配置参数
//      包含网络设置、渲染设置、扫描仪模拟参数等
//==========================================================================
struct LaserSettings {
    //======================================================================
    // 网络配置
    //======================================================================
    int NetworkPort = 5568;                  // UDP 端口号（Beyond 默认端口）
    int MaxLaserDevices = 4;                 // 最大激光设备数量（0-3）
    
    //======================================================================
    // 渲染配置
    //======================================================================
    int TextureSize = 1024;                  // 渲染纹理分辨率
                                             // 可选值：512/1024/2048/4096
                                             // 更高的分辨率提供更好的细节但消耗更多 GPU 资源
    bool EnableMipmaps = true;               // 是否生成 Mipmap 纹理链
                                             // 启用可提升远距离观看的视觉质量
    
    //======================================================================
    // 扫描仪模拟
    //======================================================================
    bool ScannerSimulation = true;           // 启用扫描仪物理模拟
                                             // 模拟真实激光扫描仪的惯性和加速特性
    int SampleCount = 8;                     // 点插值采样数量
                                             // 在相邻点之间插入的额外点数，提升平滑度
    float EdgeFade = 0.1f;                   // 边缘淡化因子 [0.0, 1.0]
                                             // 根据扫描速度动态调整亮度，模拟真实效果
    float VelocitySmoothing = 0.83f;         // 速度平滑因子 [0.0, 1.0]
                                             // 更高的值产生更平滑的运动，模拟扫描仪惯性
    
    //======================================================================
    // 光束检测
    //======================================================================
    int BeamRepeatThreshold = 8;             // 光束重复点阈值
                                             // 连续相同位置的点数超过此值时识别为静止光束
    int BeamIntensityCount = 160;            // 高强度光束生成的额外点数
                                             // 用于增强静止光束的渲染效果
    
    //======================================================================
    // 渲染参数
    //======================================================================
    float LineWidth = 0.1f;                  // 激光线条宽度（像素）
    float MaxBeamBrush = 2.0f;               // 最大光束画刷大小
    bool EnableBeamBrush = false;            // 启用光束画刷效果
                                             // 启用后会移除重复点以优化渲染
    
    //======================================================================
    // 质量设置
    //======================================================================
    enum class QualityLevel {
        Low,        // 低质量：8倍降采样，适用于低性能硬件
        Medium,     // 中等质量：4倍降采样，适用于一般硬件
        High,       // 高质量：2倍降采样，推荐设置
        Ultra       // 超高质量：无降采样，适用于高端硬件
    };
    QualityLevel LaserQuality = QualityLevel::High;  // 默认质量级别
    
    //======================================================================
    // 并行处理
    //======================================================================
    bool EnableParallelProcessing = false;   // 启用多线程并行处理
                                             // 实验性功能，可能提升多设备场景的性能
};

} // namespace Core
} // namespace BeyondLink

